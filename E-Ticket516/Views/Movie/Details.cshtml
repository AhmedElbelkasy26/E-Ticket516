@using E_Ticket516.Models.ViewModels
@model MovieAndActorMoviesVM
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cinematic Movie Display</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;600;700&family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-gold: #d4af37;
            --secondary-gold: #b8960f;
            --dark-bg: #0a0a0a;
            --card-bg: rgba(20, 20, 20, 0.95);
        }

        * {
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 50%, #2a2a2a 100%);
            min-height: 100vh;
            color: #ffffff;
        }

        .cinzel-font {
            font-family: 'Cinzel', serif;
        }

        .hero-section {
            position: relative;
            height: 70vh;
            overflow: hidden;
            display: flex;
            align-items: center;
            background: linear-gradient(45deg, rgba(0,0,0,0.8), rgba(212,175,55,0.1));
        }

        .hero-bg {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-size: cover;
            background-position: center;
            filter: blur(2px);
            transform: scale(1.1);
            animation: slow-zoom 20s ease-in-out infinite alternate;
        }



        .hero-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(0,0,0,0.7) 0%, rgba(212,175,55,0.2) 100%);
        }

        .hero-content {
            position: relative;
            z-index: 10;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 3rem;
            align-items: center;
        }

        .movie-poster {
            position: relative;
            max-width: 350px;
            margin: 0 auto;
        }

        .poster-frame {
            position: relative;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 25px 50px rgba(0,0,0,0.5), 0 0 0 1px rgba(212,175,55,0.3);
            transition: all 0.5s ease;
        }

            .poster-frame:hover {
                transform: translateY(-10px) rotateY(5deg);
                box-shadow: 0 35px 70px rgba(0,0,0,0.7), 0 0 0 1px rgba(212,175,55,0.6);
            }

            .poster-frame img {
                width: 100%;
                height: auto;
                display: block;
            }

        .movie-info {
            color: #ffffff;
        }

        .movie-title {
            font-size: 3.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
            background: linear-gradient(135deg, #ffffff 0%, #d4af37 100%);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }

        .movie-meta {
            display: flex;
            gap: 2rem;
            margin-bottom: 2rem;
            flex-wrap: wrap;
        }

        .meta-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            background: rgba(212,175,55,0.1);
            border: 1px solid rgba(212,175,55,0.3);
            border-radius: 25px;
            font-size: 0.9rem;
        }

        .cast-section {
            margin: 4rem 0;
            padding: 0 2rem;
            max-width: 1200px;
            margin-left: auto;
            margin-right: auto;
        }

        .section-title {
            font-size: 2.5rem;
            font-weight: 600;
            margin-bottom: 2rem;
            text-align: center;
            background: linear-gradient(135deg, #ffffff 0%, #d4af37 100%);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .cast-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 1.5rem;
            margin-bottom: 3rem;
        }

        .cast-card {
            position: relative;
            border-radius: 15px;
            overflow: hidden;
            background: var(--card-bg);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(212,175,55,0.2);
            transition: all 0.4s ease;
        }

            .cast-card:hover {
                transform: translateY(-8px);
                border-color: var(--primary-gold);
                box-shadow: 0 20px 40px rgba(212,175,55,0.2);
            }

        .cast-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            transition: transform 0.4s ease;
        }

        .cast-card:hover .cast-image {
            transform: scale(1.1);
        }

        .cast-info {
            padding: 1rem;
            text-align: center;
        }

        .gallery-section {
            margin: 4rem 0;
            padding: 0 2rem;
            max-width: 1200px;
            margin-left: auto;
            margin-right: auto;
        }

        .custom-carousel {
            position: relative;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 25px 50px rgba(0,0,0,0.3);
            height: 500px;
        }

        .carousel-item {
            position: relative;
            height: 100%;
        }

            .carousel-item img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: transform 0.5s ease;
            }

            .carousel-item.active img {
                transform: scale(1.02);
            }

        .carousel-controls {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(212,175,55,0.2);
            border: 1px solid rgba(212,175,55,0.4);
            border-radius: 50%;
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #ffffff;
            font-size: 1.2rem;
            cursor: pointer;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }

            .carousel-controls:hover {
                background: rgba(212,175,55,0.4);
                border-color: var(--primary-gold);
                transform: translateY(-50%) scale(1.1);
            }

        .carousel-prev {
            left: 20px;
        }

        .carousel-next {
            right: 20px;
        }

        .carousel-indicators {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 0.5rem;
        }

        .indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: rgba(255,255,255,0.4);
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .indicator.active,
            .indicator:hover {
                background: var(--primary-gold);
                transform: scale(1.2);
            }

        .floating-elements {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .floating-particle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: var(--primary-gold);
            border-radius: 50%;
            opacity: 0.6;
            animation: float 15s infinite linear;
        }

    </style>
</head>
<body>

    <!-- Floating Particles Animation -->
    <div class="floating-elements"></div>

    <div class="container mx-auto">
        <!-- Hero Section -->
        <section class="hero-section">
            <div class="hero-bg" style="background-image: url('~/images/movies/@Model.Movie.Images.ToList()[0].ImageUrl');"></div>
            <div class="hero-overlay"></div>

            <div class="hero-content">
                <div class="movie-poster">
                    <div class="poster-frame">
                        <img src="~/images/movies/@Model.Movie.Images.ToList()[0].ImageUrl" alt="Movie Poster" />
                    </div>
                </div>

                <div class="movie-info">
                    <h1 class="movie-title cinzel-font">@Model.Movie.Name</h1>

                    <div class="movie-meta">
                        <div class="meta-item">
                            <i class="fas fa-film text-yellow-400"></i>
                            <span>@Model.Movie.Category.Name</span>
                        </div>
                        <div class="meta-item">
                            <i class="fas fa-map-marker-alt text-red-400"></i>
                            <span>@Model.Movie.Cinema.Name</span>
                        </div>
                        <div class="meta-item">
                            <i class="fas fa-star text-yellow-400"></i>
                            <span>Premium Quality</span>
                        </div>
                    </div>

                    <p class="text-lg text-gray-300 leading-relaxed mb-6">
                        Experience cinema like never before. Immerse yourself in stunning visuals and captivating storytelling that will leave you breathless.
                    </p>

                    <div class="flex gap-4">
                        <button class="bg-gradient-to-r from-yellow-600 to-yellow-400 hover:from-yellow-500 hover:to-yellow-300 px-8 py-3 rounded-full font-semibold text-black transition-all duration-300 transform hover:scale-105">
                            <i class="fas fa-play mr-2"></i>Watch Trailer
                        </button>
                        <button class="border-2 border-yellow-400 text-yellow-400 hover:bg-yellow-400 hover:text-black px-8 py-3 rounded-full font-semibold transition-all duration-300">
                            <i class="fas fa-info-circle mr-2"></i>More Info
                        </button>
                    </div>
                </div>
            </div>
        </section>

        <!-- Cast Section -->
        <section class="cast-section">
            <h2 class="section-title cinzel-font">
                <i class="fas fa-users mr-3"></i>Meet the Cast
            </h2>

            <div class="cast-grid">
                @foreach (var item in Model.ActorMovies)
                {
                    <div class="cast-card">
                        <img src="~/images/cast/@item.Actor.ProfilePicture" alt="Actor" class="cast-image" />
                        <div class="cast-info">
                            <h3 class="font-semibold text-white mb-1">@item.Actor.FirstName + @item.Actor.LastName  </h3>
                            <p class="text-sm text-gray-400">@item.Actor.Bio</p>
                        </div>
                    </div>
                }
            </div>
        </section>

        <!-- Image Gallery Section -->
        <section class="gallery-section">
            <h2 class="section-title cinzel-font">
                <i class="fas fa-images mr-3"></i>Behind the Scenes
            </h2>

            <div class="custom-carousel" id="movieCarousel">
                <div class="carousel-inner">
                    @for (int i = 0; i < Model.Movie.Images.ToList().Count; i++)
                    {
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <img src="~/images/movies/@Model.Movie.Images.ToList()[i].ImageUrl" alt="Movie Scene @(i + 1)" />
                        </div>
                    }
                </div>

                <button class="carousel-controls carousel-prev" onclick="previousSlide()">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <button class="carousel-controls carousel-next" onclick="nextSlide()">
                    <i class="fas fa-chevron-right"></i>
                </button>

                <div class="carousel-indicators">
                    @for (int i = 0; i < Model.Movie.Images.ToList().Count; i++)
                    {
                        <div class="indicator @(i == 0 ? "active" : "")" onclick="currentSlide(@(i + 1))"></div>
                    }
                </div>
            </div>
        </section>
    </div>

    <script>
        // Carousel functionality
        let slideIndex = 1;
        const totalSlides = @Model.Movie.Images.ToList().Count;

        function showSlide(n) {
            const slides = document.querySelectorAll('.carousel-item');
            const indicators = document.querySelectorAll('.indicator');

            if (n > totalSlides) slideIndex = 1;
            if (n < 1) slideIndex = totalSlides;

            slides.forEach(slide => slide.classList.remove('active'));
            indicators.forEach(indicator => indicator.classList.remove('active'));

            slides[slideIndex - 1].classList.add('active');
            indicators[slideIndex - 1].classList.add('active');
        }

        function nextSlide() {
            showSlide(slideIndex += 1);
        }

        function previousSlide() {
            showSlide(slideIndex -= 1);
        }

        function currentSlide(n) {
            showSlide(slideIndex = n);
        }

        // Auto-advance carousel
        setInterval(() => {
            nextSlide();
        }, 5000);

        // Floating particles animation
        function createFloatingParticles() {
            const container = document.querySelector('.floating-elements');
            const particleCount = 15;

            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.classList.add('floating-particle');
                particle.style.left = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 15 + 's';
                particle.style.animationDuration = (Math.random() * 10 + 10) + 's';
                container.appendChild(particle);
            }
        }

        // Initialize animations
        document.addEventListener('DOMContentLoaded', () => {
            createFloatingParticles();

            // Add smooth scroll behavior
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    const target = document.querySelector(this.getAttribute('href'));
                    if (target) {
                        target.scrollIntoView({ behavior: 'smooth' });
                    }
                });
            });
        });

        // Add intersection observer for animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);

        // Observe elements for animation
        document.addEventListener('DOMContentLoaded', () => {
            const animatedElements = document.querySelectorAll('.cast-card, .section-title');
            animatedElements.forEach(el => {
                el.style.opacity = '0';
                el.style.transform = 'translateY(30px)';
                el.style.transition = 'all 0.6s ease';
                observer.observe(el);
            });
        });
    </script>
</body>

